generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Article {
  id          String   @id @default(cuid())
  title       String
  description String
  body        String
  image       String?
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@index([title], map: "articles_title")
  @@index([createdAt], map: "created_at")
}

model Note {
  id          String   @id @default(cuid())
  title       String
  description String
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@index([createdAt], map: "notes_created_at")
  @@index([title], map: "notes_title")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  body        String
  links       String[]
  github      String?
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@index([createdAt], map: "project_created_at")
  @@index([title], map: "projects_title")
}

model Photograph {
  id        String   @id @default(cuid())
  title     String
  image     String
  likes     Int      @default(0)
  photoTags PhotographTag[] @relation("PhotographToPhotographTag")
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([createdAt], map: "photographs_created_at")
  @@index([title], map: "photographs_title")
}

model PhotographTag {
  id        String   @id @default(cuid())
  name      String   @unique
  photos    Photograph[] @relation("PhotographToPhotographTag")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([name], map: "photograph_tags_name")
}